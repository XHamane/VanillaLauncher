<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAPgAAAH4AAAB/AAAA/wAYAP/APAP/////8=
</value>
  </data>
</root>